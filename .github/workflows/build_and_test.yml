name: Node.js CI

on: [push, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          path: h5p-course-presentation

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "15.x"

      - run: |
          cd h5p-course-presentation
          npm ci
          npm run validate-types
          npm run build

      - run: |

          mkdir -p dist
          cd dist

          # Clone dependencies
          while read -r repo; do git clone ${repo}; done < ../h5p-course-presentation/build_info/repos

          # Install local dependencies and build distribution versions
          if [ -d "h5p-editor-color-selector" ]; then pushd h5p-editor-color-selector && git checkout b0ae8c941cedcec73df6b186663eae6df8679810; popd; fi
          if [ -d "h5p-dialogcards" ]; then pushd h5p-dialogcards && npm ci && npm run build; popd; fi
          if [ -d "h5p-drag-text" ]; then pushd h5p-drag-text && npm ci && npm run build; popd; fi
          if [ -d "h5p-questionnaire" ]; then pushd h5p-questionnaire && npm ci && npm run build; popd; fi
          if [ -d "h5p-interactive-video" ]; then pushd h5p-interactive-video && npm ci && npm run build; popd; fi
          if [ -d "h5p-open-ended-question" ]; then pushd h5p-open-ended-question && npm ci && npm run build; popd; fi
          if [ -d "h5p-simple-multiple-choice" ]; then pushd h5p-simple-multiple-choice && npm ci && npm run build; popd; fi

          # Remove projects that we want to override
          rm -rf \
            h5p-course-presentation \
            h5p-editor-course-presentation \
            h5p-chart \
            h5p-shape \
            h5p-editor-shape \
            h5p-font-icons \
            h5p-drag-n-bar \
            h5p-drag-n-drop \
            h5p-editor-drag-question \
            h5p-drag-question \
            h5p-editor-radio-selector

          # Clone override projects without build scripts
          git clone https://github.com/NDLANO/h5p-chart.git
          git clone https://github.com/NDLANO/h5p-shape.git
          git clone https://github.com/NDLANO/h5p-editor-shape.git
          git clone https://github.com/NDLANO/h5p-editor-image-radio-group.git
          git clone https://github.com/NDLANO/h5p-font-icons.git
          git clone https://github.com/NDLANO/h5p-drag-n-bar.git
          git clone https://github.com/NDLANO/h5p-drag-n-drop.git
          git clone https://github.com/NDLANO/h5p-editor-drag-question.git
          git clone https://github.com/edh5p/h5p-editor-radio-selector.git

          # Clone and build override projects with build scripts
          git clone https://github.com/NDLANO/h5p-editor-course-presentation.git && pushd h5p-editor-course-presentation && npm ci && npm run build && popd
          git clone https://github.com/NDLANO/h5p-drag-question.git && pushd h5p-drag-question && npm ci && npm run build && popd

          cp -r ../h5p-course-presentation .

      - run: |
          cd dist
          ls
          npm install -g h5p
          h5p pack -r h5p-course-presentation interaktiv_tavle.h5p
          h5p validate interaktiv_tavle.h5p

      - name: Upload packed file as artifact
        uses: actions/upload-artifact@v2
        with:
          name: interaktiv_tavle.h5p
          path: dist/interaktiv_tavle.h5p
  
  release:
    name: Create release
    runs-on: ubuntu-latest

    needs:
      - build
  
    steps:
      - name: Load library.json
        id: set_library
        run: |
          ls
          JSON=$(cat ./h5p-course-presentation/library.json)
          JSON="${JSON//'%'/%25}"
          JSON="${JSON//$'\n'/%0A}"
          JSON="${JSON//$'\r'/%0D}"
          echo "::set-output name=library::${JSON}"

      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest" # https://github.com/marvinpinto/actions/tree/master/packages/automatic-releases
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: |
            ${{ 
              format(
                'v{0}.{1}.{2}',
                fromJson(steps.set_library.outputs.library).majorVersion,
                fromJson(steps.set_library.outputs.library).minorVersion,
                fromJson(steps.set_library.outputs.library).patchVersion
              )
            }}
          prerelease: false
          files: |
            dist/interaktiv_tavle.h5p
